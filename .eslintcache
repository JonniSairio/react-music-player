[{"C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\index.js":"1","C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\App.js":"2","C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\reportWebVitals.js":"3","C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\components\\Song.js":"4","C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\components\\Library.js":"5","C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\components\\LibrarySong.js":"6","C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\components\\Nav.js":"7","C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\components\\Player.js":"8","C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\data.js":"9"},{"size":266,"mtime":1611603992587,"results":"10","hashOfConfig":"11"},{"size":1962,"mtime":1611596896011,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":327,"mtime":1611603878548,"results":"14","hashOfConfig":"11"},{"size":847,"mtime":1611603800442,"results":"15","hashOfConfig":"11"},{"size":1069,"mtime":1611603816125,"results":"16","hashOfConfig":"11"},{"size":501,"mtime":1611603840339,"results":"17","hashOfConfig":"11"},{"size":4311,"mtime":1611607682791,"results":"18","hashOfConfig":"11"},{"size":4142,"mtime":1611603608305,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1g4q78u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\index.js",[],["40","41"],"C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\App.js",[],"C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\reportWebVitals.js",[],"C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\components\\Song.js",[],"C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\components\\Library.js",[],"C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\components\\LibrarySong.js",[],"C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\components\\Nav.js",[],"C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\components\\Player.js",["42"],"import React, { useEffect, useState } from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faPlayCircle, \r\n    faStepForward,\r\n    faStepBackward,\r\n    faPauseCircle,\r\n    faVolumeDown,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Player = ({ \r\n    audioRef, \r\n    currentSong, \r\n    isPlaying, \r\n    setIsPlaying, \r\n    setSongInfo, \r\n    songInfo,\r\n    songs,\r\n    setCurrentSong,\r\n    setSongs, \r\n}) => {\r\n    const [activeVolume, setActiveVolume] = useState(false);\r\n    //useEffect\r\n    useEffect(() => {\r\n        \r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === currentSong.id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            } else {\r\n               return {\r\n                   ...song,\r\n                   active: false,\r\n               }; \r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    }, [currentSong]);\r\n   \r\n    //Event Handlers\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n\r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({...songInfo, currentTime: e.target.value});\r\n    };\r\n\r\n    const skipTrackHandler = async (direction) => {\r\n      let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n      if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      }\r\n      if (direction === \"skip-back\") {\r\n        if ((currentIndex - 1) % songs.length === -1) {\r\n           await setCurrentSong(songs[songs.length -1]);\r\n            if (isPlaying) audioRef.current.play();\r\n            return;\r\n        }\r\n        await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      }\r\n      if(isPlaying) audioRef.current.play();\r\n    };\r\n\r\n    const changeVolume = (e) => {\r\n        let value = e.target.value;\r\n        audioRef.current.volume = value;\r\n        setSongInfo({ ...songInfo, volume: value });\r\n      };\r\n    \r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <input \r\n                    min={0} \r\n                    max={songInfo.duration || 0} \r\n                    value={songInfo.currentTime} \r\n                    onChange={dragHandler}\r\n                    type=\"range\"\r\n                />\r\n                <p>{songInfo.duration ? \r\n                getTime(songInfo.duration) : '0:00'}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} \r\n                    className=\"skip-back\" \r\n                    size=\"2x\" \r\n                    icon={faStepBackward} \r\n                />\r\n                <FontAwesomeIcon \r\n                    onClick={playSongHandler} \r\n                    className=\"play\" \r\n                    size=\"3x\" \r\n                    icon={isPlaying ? faPauseCircle : faPlayCircle} \r\n                />\r\n                <FontAwesomeIcon \r\n                    className=\"skip-forward\" \r\n                    size=\"2x\" \r\n                    icon={faStepForward}\r\n                    onClick={() => skipTrackHandler('skip-forward')} \r\n                />\r\n                <FontAwesomeIcon\r\n                    size=\"2x\"\r\n                    onClick={() => setActiveVolume(!activeVolume)}\r\n                    icon={faVolumeDown}\r\n                />\r\n                    {activeVolume && (\r\n                    <input\r\n                        onChange={changeVolume}\r\n                        value={songInfo.volume}\r\n                        max=\"1\"\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        type=\"range\"\r\n                    />\r\n                )}  \r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;","C:\\Users\\Jonni\\Desktop\\React juttuja\\Dev Ed course\\music-player\\src\\data.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":41,"column":8,"nodeType":"49","endLine":41,"endColumn":21,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"56","text":"57"},[973,986],"[currentSong, setSongs, songs]"]